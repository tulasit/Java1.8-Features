Why use Lambda Expression


"To provide the implementation of Functional interface.
Less coding."
 
  Java Lambda Expression Syntax

      a.)(argument-list) -> {body}  
      
Java lambda expression is consisted of three components.

1) Argument-list: It can be empty or non-empty as well.

2) Arrow-token: It is used to link arguments-list and body of expression.

3) Body: It contains expressions and statements for lambda expression.

** Why I got error in this codition:
 
   D:\Java Practice\Java1.8 Lambda Experssion>javac TestDemo.java
            TestDemo.java:10: error: incompatible types: TestDemo is not a functional interface
                TestDemo t=()->{System.out.println("TestDemo");};
                   ^
1 error

class TestDemo
{
   void testDemo()
   {
     
	 System.out.println("testDemo");
   }
   public static void main(String args[])
   {  
        TestDemo t=()->{System.out.println("TestDemo");};

		t.testDemo();
   }
}
@***** so lambdaexpression needs only  functional interface

If lambda expression with functional interface
  interface ITestDemo
{
	public void demo();
}
class TestDemo
{
   
   public static void main(String args[])
   {  
        ITestDemo t=()->{System.out.println("Hello  Lambda Expression needs functional interface");};

		t.demo();
   }
}



